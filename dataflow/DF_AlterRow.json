{
	"name": "DF_AlterRow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employee",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Employee_AlterRow",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          Name as string,",
				"          Location as string,",
				"          DeptID as integer,",
				"          Salary as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 alterRow(insertIf(DeptID==10||DeptID==20||DeptID==30||DeptID==40||DeptID==60),",
				"     updateIf(DeptID==10||DeptID==20||DeptID==30||DeptID==40||DeptID==60)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          name as string,",
				"          Location as string,",
				"          DeptID as integer,",
				"          Salary as decimal(19,4)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['Id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Id,",
				"          name = Name,",
				"          Location,",
				"          DeptID,",
				"          Salary",
				"     )) ~> sink1"
			]
		}
	}
}